<%- include('header') -%>

<div class="container text-left content">
  <div class="row header mytable" style="border: none; padding-top: 21px;">
    <table>
      <td class="col-lg-3 myth" style="border: none; display: flex; align-items: center; gap: 10px;">
        <a href="/timesheet?weekOffset=<%= currentWeek.weekOffset - 1 %>">
            <i class="fa-solid fa-chevron-left arrows"></i>
        </a>
    
        <a href="/timesheet?weekOffset=<%= currentWeek.weekOffset + 1 %>">
            <i class="fa-solid fa-chevron-right arrows"></i>
        </a>

        <%= currentWeek.month + " " + currentWeek.start_date + " - " + currentWeek.month + " " + currentWeek.end_date %>

        <a href="/timesheet?weekOffset=0" class="btn btn-outline-secondary" style="margin-left:10px;">Today</a>
      </td>
    </table>
  </div>

  <div class="table-responsive text-nowrap">
    <table class="table table-hover">
      <thead>
        <tr class="mybottomborder">
          <th class="col-lg-4 myth myrightborder">Projects</th>
          <td class="myth">Monday</td>
          <td class="myth">Tuesday</td>
          <td class="myth">Wednesday</td>
          <td class="col-lg-1 myth">Thursday</td>
          <td class="col-lg-1 myth">Friday</td>
          <td class="col-lg-1 myth">Saturday</td>
          <td class="col-lg-1 myth myrightborder">Sunday</td>
          <td class="col-lg-1 myth">Total</td>
        </tr>
      </thead>

      <tbody>
        <%- include('messages') -%>

        <% 
        // Group times by project_name
        const timesByProject = {};

        times.forEach(time => {
            const projectName = time.project_name;
            if (!timesByProject[projectName]) {
                timesByProject[projectName] = [];
            }
            timesByProject[projectName].push(time);
        });

        // Sort times within each project by start date (day)
        Object.keys(timesByProject).forEach(projectName => {
            timesByProject[projectName].sort((a, b) => new Date(a.start) - new Date(b.start));
        });

        // Function to calculate the time duration for each entry
        const getDuration = (start, end) => {
            const startDate = moment(start, "YYYY-MM-DD HH:mm");

            // If end time is "1900-01-01 00:00:00", treat it as ongoing, use current time
            let endDate = moment(end, "YYYY-MM-DD HH:mm");
            if (end === "1900-01-01 00:00:00" || !endDate.isValid()) {
                endDate = moment(); // Set to current time for ongoing tasks
            }

            // Calculate total minutes and convert it to hours and minutes
            const totalMinutes = Math.max(0, endDate.diff(startDate, 'minutes'));
            const hours = Math.floor(totalMinutes / 60);
            const minutes = totalMinutes % 60;

            return { hours, minutes, isOngoing: end === "1900-01-01 00:00:00" };
        };

        // Sum durations for each project and day of the week
        let hasProjects = false;

        Object.keys(timesByProject).forEach(projectName => {
            let daySums = Array(7).fill(0).map(() => ({ hours: 0, minutes: 0 }));
            let totalSum = { hours: 0, minutes: 0 };

            timesByProject[projectName].forEach(time => {
                const duration = getDuration(time.start, time.end);
                const date = moment(time.start, "YYYY-MM-DD HH:mm:ss")
                const dayIndex = (date.day() + 6) % 7;
                daySums[dayIndex].hours += duration.hours;
                daySums[dayIndex].minutes += duration.minutes;
                totalSum.hours += duration.hours;
                totalSum.minutes += duration.minutes;
            });

            // Normalize the minutes to hours
            const normalizeDuration = (duration) => {
                const totalMinutes = duration.hours * 60 + duration.minutes;
                const hours = Math.floor(totalMinutes / 60);
                const minutes = totalMinutes % 60;
                return { hours, minutes };
            };
            totalSum = normalizeDuration(totalSum);
            daySums = daySums.map(normalizeDuration);

            hasProjects = true;
            const projectMap = {};
            projects.forEach(p => { projectMap[p.name] = p._id; });
            const ongoing = timesByProject[projectName]?.some(time => time.end === '1900-01-01 00:00:00');
        %>

        <tr>
            <td class="col-lg-4 myth myrightborder mybottomborder">
              <strong style="display: flex; justify-content: space-between; align-items: center; width: 100%;">
                <span><%= projectName %></span>
                <% if (ongoing) { %>
                  <!-- Stop button -->
                  <a href="/stop_timer/<%= projectMap[projectName] %>"  
                     class="btn" 
                     style="height: 30px; width: 30px; font-size: 13px; padding: 0; display: flex; justify-content: center; align-items: center;">
                    <i class="fa-regular fa-circle-stop" style="font-size: 16px;"></i> 
                  </a>
                <% } else { %>
                  <!-- Start button -->
                  <a href="/start_timer/<%= projectMap[projectName] %>" 
                     class="btn" 
                     style="height: 30px; width: 30px; font-size: 13px; padding: 0; display: flex; justify-content: center; align-items: center;">
                    <i class="fa-regular fa-circle-play" style="font-size: 16px;"></i>
                  </a>
                <% } %>
                  
              </strong>              
              
            </td>
            <% daySums.forEach(function(sum, index) { %>
                <td class="col-lg-1 myth mybottomborder" style="border: none;">
                    <%= sum.hours || sum.minutes ? sum.hours + 'h ' + sum.minutes + 'm' : '-' %>
                </td>
            <% }); %>

            <!-- Total column without right border -->
            <td class="col-lg-1 myth myleftborder" style="border-right: none;">
                <%= totalSum.hours || totalSum.minutes ? totalSum.hours + 'h ' + totalSum.minutes + 'm' : '-' %>
            </td>
        </tr>

        <% // Render time entries for this project, ordered by day
        timesByProject[projectName].forEach(time => 
        {
          const duration = getDuration(time.start, time.end);
          const date = new Date(time.start);
          const dayIndex = (date.getDay() + 6) % 7;
        %>

        <tr class="mybottomborder">
          <td class="col-lg-4 mytd myrightborder mytext text-start" style="padding-left: 0px;">
            <img src="/Pictures/timer.png" alt="Logo" width="18" height="20" class="d-inline-block align-text-top timer">
            <% 
              let formattedEndTime = moment(time.end, "YYYY-MM-DD HH:mm:ss").format("HH:mm");
              if (time.end === "1900-01-01 00:00:00") {
                formattedEndTime = "Now";  // Display "Now" if it's an ongoing task
              }
              // Check for "00:00 - 00:00" case and replace with "00:00 - now"
              if (moment(time.start, "YYYY-MM-DD HH:mm:ss").format("HH:mm") === "00:00" && formattedEndTime === "00:00") {
                formattedEndTime = "Now"; // Display "Now" if the end time is still 00:00 and task is ongoing
              }
            %>
            <%= moment(time.start, "YYYY-MM-DD HH:mm:ss").format("HH:mm") %> - <%= formattedEndTime %>
          
            <% if(time.notes) { %> 
              <a class="note"><i class="fa-solid fa-message"></i></a> 
            <% } %>
            </td>          

          <% // Display time duration for the correct day
          for (let i = 0; i < 7; i++) { %>
              <td class="col-lg-1 mytd myrightborder">
                  <%= i === dayIndex ? `${duration.hours}h ${duration.minutes}m` : '' %>
              </td>
          <% } %>
      
          <td class="col-lg-1 mytd text-end" style="border-right: none;">
              <a href="/timesheet/edit/<%= time._id %>" class="mytd">
                  <i class="fa-solid fa-ellipsis"></i>
              </a>
          </td>
      </tr>
      
      <% }); %>
      <% }); %>

      </tbody>
    </table>

    <% if (!hasProjects) { %>
      <div style="width: 100%; height: 200px; background-color: #1E2024; margin-top: 20px;"></div>
    <% } %>

  </div>

  <div class="d-flex gap-2 justify-content-start">
    <a href="/timesheet/add-project" type="button" class="btn mybutton" style=" margin-top: 8px; margin-left: 12px;" hidden>+ Add project</a>
    <a href="/timesheet/new" type="button" class="btn mybutton" style="margin-top: 8px; margin-left: 12px;">+ Add time</a>
  </div>
</div>

<%- include('index-style') -%>
<%- include('footer') -%>
